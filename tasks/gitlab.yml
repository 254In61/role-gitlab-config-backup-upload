---
# - name: Check if Git credentials are parsed
#   ansible.builtin.debug:
#     msg: "ANSIBLE_NET_PASSWORD: {{ lookup('env', 'ANSIBLE_NET_PASSWORD') }}"
#   delegate_to: localhost

- name: Clone the Git repository
  ansible.builtin.git:
    repo: "{{ git_repo_url }}"
    dest: "{{ local_git_repo_path }}"
    version: main
    force: yes
  run_once: true
  delegate_to: localhost
  ignore_errors: true

# This task will create the entire directory structure recursively if it doesn't already exist.
- name: "Ensure {{ local_git_repo_sub_dir }} directory is present in the local repo"
  ansible.builtin.file:
    path: "{{ local_git_repo_sub_dir }}"
    state: directory
  delegate_to: localhost
  ignore_errors: true 

- name: "Ensure {{ file_name }} is present in the local repo"
  ansible.builtin.file:
    path: "{{ local_git_repo_sub_dir }}/{{ file_name }}"
    state: touch
  delegate_to: localhost
  ignore_errors: true

# Ensures all the devices configs are included.
# 'run_once' only collects 1 device
- name: Add local temp file to the local git repo
  ansible.builtin.copy:
    src: "{{ tmp_cmd_output_store }}"
    dest: "{{ local_git_repo_sub_dir }}/{{ file_name }}"
  delegate_to: localhost
  register: gitlab_upload
  ignore_errors: true

# This is a one time action even if the number of devices are many.
# All updates would have been done in the prior task
- name: Commit the changes and push to the remote repository
  ansible.builtin.shell: |
     cd {{ local_git_repo_path }}
     git config --global user.name {{ git_user }}
     git config --global user.email {{ git_user_email }}
     git add .
     git commit -m "Updated running-configs on $(date)"
     git push
  run_once: true
  delegate_to: localhost
  ignore_errors: true

